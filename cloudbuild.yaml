# This step build image and push into container registry
steps:
- name: 'gcr.io/cloud-builders/docker'
  id: Build App Image
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${REPO_NAME}:${SHORT_SHA}', "."]

# This step pushes the image to Artifact Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${REPO_NAME}:$SHORT_SHA' 
# This step clones the hello-cloudbuild-env repository
- name: 'gcr.io/cloud-builders/gcloud'
  id: Clone gtops repository
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    git clone https://$${GH_TOKEN}@github.com/devopshimanshu/webapp-color-helm.git && \
    cd webapp-color-helm && \
    git config user.email "cloud.himanshu2022@gmail.com"
  secretEnv: ['GH_TOKEN']
- name: 'gcr.io/cloud-builders/gcloud'
  id: Update tag-values.yaml
  entrypoint: /bin/sh
   args:
    - '-c'
    - |
      cd webapp-color-helm && \
      rm tag-values.yaml && \
      echo 'image.tag: $SHORT_SHA' > tag-values.yaml
#This step pushes the manifest back to webapp-color-gitops
- name: 'gcr.io/cloud-builders/gcloud'
  id: Push tag values yaml
  entrypoint: /bin/sh
  args: 
    - '-c'
    - |
      set -x && \
      cd webapp-color-helm && \
      git add  ./tag-values.yaml && \
      git commit -m "Deploying image us-central1-docker.pkg.dev/$PROJECT_ID/webapp-color-gitops/webapp-color:${SHORT_SHA}. Built from commit ${COMMIT_SHA} of repository webapp-color. Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
      git push origin main
availableSecrets:
  secretManager:
  - versionName: projects/155192297176/secrets/github-token-devopshimanshu/versions/1
    env: GH_TOKEN