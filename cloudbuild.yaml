# This step build image and push into container registry
steps:
- name: 'gcr.io/cloud-builders/docker'
  id: Build App Image
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${REPO_NAME}:${SHORT_SHA}', "."]

# This step pushes the image to Artifact Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${REPO_NAME}:$SHORT_SHA'

# This step clones the hello-cloudbuild-env repository
- name: 'gcr.io/cloud-builders/gcloud'
  id: Clone gtops repository
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
      git clone https://github.com/devopshimanshu/webapp-color-gitops && \
      cd webapp-color-gitops && \
      git config user.email "cloud.himanshu2022@gmail.com"

#This step generates the new manifest
- name: 'gcr.io/cloud-builders/gcloud'
  id: Update Image SHORT_SHA
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
      pwd
      ls -larth
#sed 's/SHORT_SHA/${SHORT_SHA}/g' webapp-color-gitops/deployment/deployment.yaml.tpl > webapp-color-gitops/deployment/deployment.yaml

#This step pushes the manifest back to webapp-color-gitops
- name: 'gcr.io/cloud-builders/gcloud'
  id: Push deployment yaml 
  entrypoint: /bin/sh
  args: 
    - '-c'
    - |
      set -x && \
      cd webapp-color-gitops && \
      ls &&\
      git add  /deployment/deployment.yaml && \
      git commit -m "Deploying image us-central1-docker.pkg.dev/$PROJECT_ID/webapp-color-gitops/webapp-color:${SHORT_SHA}. Built from commit ${COMMIT_SHA} of repository webapp-color. Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
      git push origin master